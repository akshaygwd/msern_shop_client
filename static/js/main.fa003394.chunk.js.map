{"version":3,"sources":["actions/errorAction.js","actions/types.js","actions/authAction.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/logout.js","components/navbar.js","actions/itemAction.js","components/shoppingList.js","reducers/itemReducer.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/popupModal.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","message","status","id","type","payload","tokenConfig","getState","token","auth","console","log","config","headers","RegisterModal","state","modal","name","email","password","toggle","setState","props","onClearError","onChangHandler","e","target","value","onFormSubmit","preventDefault","newUSer","onRegister","preprops","error","this","isAuthenticated","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","Form","onSubmit","FormGroup","Label","for","Input","placeholder","onChange","Button","color","style","marginTop","Component","connect","dispatch","user","body","JSON","stringify","axios","post","then","res","data","catch","response","register","LogimModal","onLogin","login","Logout","logout","NavigationBar","authLinks","NavItem","GuestLinks","LoginModal","Navbar","dark","expand","className","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setItemLoading","ShoppingList","onGetItems","items","ListGroup","TransitionGroup","map","index","_id","CSSTransition","key","timeout","classNames","ListGroupItem","size","onDeleteItem","protoTypes","PropTypes","func","isRequired","item","object","get","delete","deleteItem","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middlware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","PopupModal","newItem","onAddItem","marginBottom","addItem","App","useEffect","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa003394.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS} from './types';\r\n\r\nexport const returnErrors = (message, status, id=null) => {\r\n    return {\r\n        type :GET_ERRORS,\r\n        payload: { message, status, id }\r\n    }\r\n}\r\n\r\nexport const clearErrors = () => {\r\n    return {\r\n        type :CLEAR_ERRORS,\r\n    }\r\n}","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEMS = 'ADD_ITEMS';\r\nexport const DELETE_ITEMS = 'DELETE_ITEMS';\r\nexport const ITEM_LOADING = 'ITEM_LOADING';\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import axios from 'axios';\r\nimport { returnErrors } from '../actions/errorAction'\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n} from '../actions/types';\r\n\r\n\r\nexport const loadUser = () => {\r\n    return (dispatch, getState) => {\r\n        console.log('hit me now');\r\n        dispatch({\r\n            type: USER_LOADING\r\n        });\r\n\r\n        axios.get('https://mernshopserver.herokuapp.com/api/auth/user', tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error.response, 'error');\r\n            dispatch(returnErrors(error.response.data, error.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const register = ({name, email, password}) => {\r\n    return (dispatch) => {\r\n        const config = {\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        const body = JSON.stringify({\r\n            name, email, password\r\n        })\r\n\r\n        axios.post('https://mernshopserver.herokuapp.com/api/users', body, config)\r\n        .then((res) => {\r\n            console.log(res, 'res');\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error, 'erroror mew');\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n            dispatch(returnErrors(error.response.data,\r\n                error.response.status, 'REGISTER_FAIL'))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const login = ({email, password}) => {\r\n    return (dispatch) => {\r\n        const config = {\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        const body = JSON.stringify({\r\n            email, password\r\n        })\r\n\r\n        axios.post('https://mernshopserver.herokuapp.com/api/auth', body, config)\r\n        .then((res) => {\r\n            console.log(res, 'res');\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error, 'erroror mew');\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            });\r\n            dispatch(returnErrors(error.response.data,\r\n                error.response.status, 'LOGIN_FAIL'))\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n//set config\r\n\r\nexport const tokenConfig = getState => {\r\n    const token = getState().auth.token;\r\n    console.log(token, 'hit');\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        }\r\n        if(token) {\r\n            config.headers['x-auth-token'] = token;\r\n        }\r\n\r\n        return config;\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport  { register } from '../../actions/authAction';\r\nimport  { clearErrors } from '../../actions/errorAction';\r\n\r\nclass RegisterModal extends Component {\r\n\r\n    state = {\r\n      modal: false,\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      message: null,\r\n    }\r\n\r\n    componentDidUpdate(preprops) {\r\n        const { error } = this.props;\r\n        if(error != preprops.error)\r\n        {\r\n            if(error.id == 'REGISTER_FAIL') {\r\n                this.setState({\r\n                    message: error.message.message\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    message: null\r\n                })\r\n            }\r\n        }\r\n\r\n        if(this.state.modal) {\r\n            if(this.props.isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n      this.setState({\r\n        modal: !this.state.modal\r\n      });\r\n      this.props.onClearError();\r\n    }\r\n\r\n    onChangHandler = (e) => {\r\n      this.setState({\r\n        [e.target.name] : e.target.value\r\n      })\r\n    }\r\n\r\n    onFormSubmit = (e) => {\r\n      e.preventDefault();\r\n      const { email, name, password  } = this.state;\r\n      const newUSer = {\r\n          name,\r\n          email,\r\n          password\r\n      }\r\n      this.props.onRegister(newUSer);\r\n    }\r\n\r\n    render() {\r\n      return(\r\n        <div>\r\n          <NavLink onClick={() =>this.toggle()} href=\"#\">\r\n              Register\r\n          </NavLink>\r\n          <Modal\r\n            isOpen={this.state.modal}\r\n            toggle={this.toggle}\r\n          >\r\n            <ModalHeader toggle={this.toggle}>\r\n              Register\r\n            </ModalHeader>\r\n            <ModalBody>\r\n             {this.state.message ? <Alert>{this.state.message}</Alert> : null }\r\n              <Form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                <FormGroup>\r\n                  <Label for=\"name\">Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"add Name\"\r\n                    onChange={(e) => this.onChangHandler(e) }\r\n                    value={this.state.value}\r\n                  />\r\n                  <Label for=\"email\">Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"add email\"\r\n                    onChange={(e) => this.onChangHandler(e) }\r\n                    value={this.state.value}\r\n                  />\r\n                  <Label for=\"password\">password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"add password\"\r\n                    onChange={(e) => this.onChangHandler(e) }\r\n                    value={this.state.value}\r\n                  />\r\n                  <Button color=\"dark\" style={{marginTop: '2rem'}}>Register</Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        error: state.error\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n      return {\r\n          onRegister: (user) => dispatch(register(user)),\r\n          onClearError: () => dispatch(clearErrors())\r\n        }\r\n  }\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(RegisterModal);","import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    NavLink,\r\n    Alert\r\n} from 'reactstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport  { login } from '../../actions/authAction';\r\nimport  { clearErrors } from '../../actions/errorAction';\r\n\r\nclass LogimModal extends Component {\r\n\r\n    state = {\r\n      modal: false,\r\n      email: '',\r\n      password: '',\r\n      message: null,\r\n    }\r\n\r\n    componentDidUpdate(preprops) {\r\n        const { error } = this.props;\r\n        if(error != preprops.error)\r\n        {\r\n            if(error.id == 'LOGIN_FAIL') {\r\n                this.setState({\r\n                    message: error.message.message\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    message: null\r\n                })\r\n            }\r\n        }\r\n\r\n        if(this.state.modal) {\r\n            if(this.props.isAuthenticated) {\r\n                this.toggle();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n      this.setState({\r\n        modal: !this.state.modal\r\n      });\r\n      this.props.onClearError();\r\n    }\r\n\r\n    onChangHandler = (e) => {\r\n      this.setState({\r\n        [e.target.name] : e.target.value\r\n      })\r\n    }\r\n\r\n    onFormSubmit = (e) => {\r\n      e.preventDefault();\r\n      const { email, password } = this.state;\r\n      const user = {\r\n        email,\r\n        password\r\n      }\r\n      this.props.onLogin(user);\r\n    }\r\n\r\n    render() {\r\n      return(\r\n        <div>\r\n          <NavLink onClick={() =>this.toggle()} href=\"#\">\r\n              Login\r\n          </NavLink>\r\n          <Modal\r\n            isOpen={this.state.modal}\r\n            toggle={this.toggle}\r\n          >\r\n            <ModalHeader toggle={this.toggle}>\r\n              Login\r\n            </ModalHeader>\r\n            <ModalBody>\r\n             {this.state.message ? <Alert>{this.state.message}</Alert> : null }\r\n              <Form onSubmit={(e) => this.onFormSubmit(e)}>\r\n                <FormGroup>\r\n                  <Label for=\"email\">Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"add email\"\r\n                    onChange={(e) => this.onChangHandler(e) }\r\n                    value={this.state.value}\r\n                  />\r\n                  <Label for=\"password\">password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"add password\"\r\n                    onChange={(e) => this.onChangHandler(e) }\r\n                    value={this.state.value}\r\n                  />\r\n                  <Button color=\"dark\" style={{marginTop: '2rem'}}>Login</Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        error: state.error\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n      return {\r\n          onLogin: (user) => dispatch(login(user)),\r\n          onClearError: () => dispatch(clearErrors())\r\n        }\r\n  }\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(LogimModal);","import React, { Component } from 'react';\r\nimport { logout } from '../../actions/authAction';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'reactstrap';\r\n\r\nexport class Logout extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavLink onClick={this.props.logout} href=\"#\">\r\n                    Logout\r\n                </NavLink>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { logout })(Logout);","import React, { Component } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText, Container\r\n  } from 'reactstrap';\r\n\r\nimport RegisterModal from './auth/RegisterModal';\r\nimport LoginModal from './auth/LoginModal';\r\nimport Logout from './auth/logout';\r\nimport { connect } from 'react-redux';\r\n\r\nclass NavigationBar extends Component {\r\n  state = {\r\n    isOpen: false\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n        isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n    const authLinks = (\r\n      <>\r\n        <NavItem>\r\n          <strong>\r\n            {user ? `Welcome ${user.name}` : null }\r\n          </strong>\r\n        </NavItem>\r\n        <NavItem>\r\n          <Logout />\r\n        </NavItem>\r\n      </>\r\n    );\r\n    const GuestLinks = (\r\n      <>\r\n      <NavItem>\r\n        <RegisterModal />\r\n      </NavItem>\r\n      <NavItem>\r\n        <LoginModal />\r\n      </NavItem>\r\n      </>\r\n    );\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\">\r\n              ShoppingList\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={() => this.toggle()}/>\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                { isAuthenticated ?\r\n                 authLinks\r\n                 :\r\n                 GuestLinks\r\n                }\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state.auth, 'auth');\r\n  return {\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(NavigationBar);","import {  GET_ITEMS, ADD_ITEMS, DELETE_ITEMS, ITEM_LOADING } from './types';\r\nimport axios from 'axios';\r\nimport { tokenConfig } from './authAction';\r\nimport { returnErrors } from './errorAction';\r\n\r\nexport const getItems = () => {\r\n\r\n    return (dispatch) => {\r\n        dispatch(setItemLoading());\r\n        axios.get('https://mernshopserver.herokuapp.com/api/items')\r\n        .then((res) => {\r\n            console.log(res, 'here me');\r\n            dispatch({\r\n                type: GET_ITEMS,\r\n                payload: res.data.items\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            returnErrors(error.response.data, error.response.status)\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteItem = (id) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setItemLoading());\r\n        axios.delete('https://mernshopserver.herokuapp.com/api/items/'+id, tokenConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: DELETE_ITEMS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            returnErrors(error.response.data, error.response.status)\r\n        })\r\n    }\r\n}\r\n\r\nexport const addItem = (item) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setItemLoading());\r\n        axios.post('https://mernshopserver.herokuapp.com/api/items', item, tokenConfig(getState))\r\n        .then((res) => {\r\n            console.log(res, 'hit');\r\n            dispatch({\r\n                type: ADD_ITEMS,\r\n                payload: res.data.item\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            returnErrors(error.response.data, error.response.status)\r\n        })\r\n    }\r\n}\r\n\r\nexport const setItemLoading = () => {\r\n    return {\r\n        type: ITEM_LOADING\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { getItems, deleteItem } from '../actions/itemAction';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ShoppingList extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onGetItems();\r\n  }\r\n\r\n  render() {\r\n    const { items, auth } = this.props;\r\n    const { isAuthenticated } = auth;\r\n    return (\r\n      <Container>\r\n        <ListGroup>\r\n          <TransitionGroup className=\"shopping-list\">\r\n            {\r\n              items  && items.map(({_id, name}, index) => {\r\n                return (\r\n                  <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                    <ListGroupItem>\r\n                      {isAuthenticated ?\r\n                        <Button\r\n                        className=\"remove-btn\"\r\n                        color=\"danger\"\r\n                        size=\"sm\"\r\n                        onClick={()=>this.props.onDeleteItem(_id)}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                      :\r\n                      null\r\n                      }\r\n\r\n                      {name}\r\n                    </ListGroupItem>\r\n                  </CSSTransition>\r\n                )\r\n              })\r\n            }\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state, 'state');\r\n  return {\r\n    items: state.item.items,\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetItems: () => dispatch(getItems()),\r\n    onDeleteItem: (id) => dispatch(deleteItem(id))\r\n  }\r\n}\r\n\r\nShoppingList.protoTypes = {\r\n  onGetItems: PropTypes.func.isRequired,\r\n  item:  PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingList);","import { v4 as uuidv4 } from 'uuid';\r\nimport {  GET_ITEMS, ADD_ITEMS, DELETE_ITEMS, ITEM_LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false\r\n      }\r\n\r\n    case DELETE_ITEMS:\r\n      console.log(action)\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item._id !== action.payload)\r\n      }\r\n\r\n    case ADD_ITEMS:\r\n      console.log(action.payload, 'payload');\r\n      console.log(state.items);\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload]\r\n      }\r\n    case ITEM_LOADING:\r\n      console.log('me');\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n  } from '../actions/types';\r\n\r\nconst  initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n}\r\n\r\nexport default function(state=initialState, action) {\r\n    switch(action.type) {\r\n        case USER_LOADING:\r\n        return {\r\n            ...state,\r\n            isLoading: true\r\n        }\r\n\r\n        case USER_LOADED:\r\n        return {\r\n            ...state,\r\n            isAuthenticated: true,\r\n            isLoading: false,\r\n            user: action.payload\r\n        }\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n        return {\r\n            ...state,\r\n            ...action.payload,\r\n            isAuthenticated: true,\r\n            isLoading: false,\r\n        }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n        return {\r\n            ...state,\r\n            token: null,\r\n            user: null,\r\n            isAuthenticated: false,\r\n            isLoading: false\r\n        }\r\n        default:\r\n        return state\r\n    }\r\n}","import  { GET_ERRORS , CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    message: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function(state=initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n        return {\r\n            message: action.payload.message,\r\n            status: action.payload.status,\r\n            id: action.payload.id\r\n        }\r\n        case CLEAR_ERRORS:\r\n        return {\r\n            message: {},\r\n            status: {},\r\n            id: {}\r\n        }\r\n        default:\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    item: itemReducer,\r\n    auth: authReducer,\r\n    error: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middlware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middlware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions/itemAction';\r\n\r\n\r\n\r\nclass PopupModal extends Component {\r\n\r\n  state = {\r\n    modal: false,\r\n    name: ''\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  onChangHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newItem = {\r\n      name: this.state.name\r\n    }\r\n\r\n    this.props.onAddItem(newItem);\r\n    this.toggle();\r\n  }\r\n\r\n  render() {\r\n    const { isAuthenticated } = this.props.auth;\r\n    return(\r\n      isAuthenticated &&\r\n      <div>\r\n        <Button\r\n          color=\"dark\"\r\n          onClick={()=> this.toggle()}\r\n          style={{marginBottom: '2rem'}}>\r\n          AddItem\r\n        </Button>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n        >\r\n          <ModalHeader toggle={this.toggle}>\r\n            Add to Shopping List\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={(e) => this.onFormSubmit(e)}>\r\n              <FormGroup>\r\n                <Label for=\"item\">Item</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"item\"\r\n                  placeholder=\"add item\"\r\n                  onChange={(e) => this.onChangHandler(e) }\r\n                  value={this.state.value}\r\n                />\r\n                <Button color=\"dark\" style={{marginTop: '2rem'}}>Add Item</Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddItem: (item) => dispatch(addItem(item))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PopupModal);","import React, {useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NavigationBar from './components/navbar';\nimport ShoppingList from './components/shoppingList';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport PopupModal from './components/popupModal';\nimport { Container } from 'reactstrap';\nimport { loadUser } from './actions/authAction';\n\n\n\nfunction App() {\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store} >\n      <div className=\"App\">\n        <NavigationBar />\n        <Container>\n          <PopupModal />\n        </Container>\n        <ShoppingList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}